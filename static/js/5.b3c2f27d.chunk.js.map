{"version":3,"sources":["components/Dialogs/Interlocutors/Interlocutors.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Chat/Chat.jsx","components/Dialogs/Interlocutors/Interlocutors.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","maxLength5","maxLengthCreator","ReduxChatForm","reduxForm","form","props","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","type","Chat","Message","className","s","message","messages","state","messagesData","map","e","id","wrap","formData","onSendMessage","Interlocutors","Conversation","to","item","Conversations","Dialogs","interlocutors","chat","onNewMessageChange","authProps","isAuth","authentication","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dialogs","dispatch","sendMessageActionCreator"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,KAAO,8B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,cAAgB,+BAA+B,KAAO,wB,uHCKjGC,EAAaC,YAAiB,GAU9BC,EAAgBC,YAAU,CAAEC,KAAM,aAAlBD,EATL,SAACE,GACZ,OACI,uBAAMC,SAAUD,EAAME,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWC,IAAUC,SAAU,CAACC,IAAUb,GAAac,YAAY,gCACzF,uBACA,wBAAQC,KAAK,SAAb,iCA4BGC,MAtBf,SAAcX,GACV,IAAMY,EAAU,SAACZ,GACb,OACI,qBAAKa,UAAWC,IAAEC,QAAlB,SACKf,EAAMe,WAGfC,EAAWhB,EAAMiB,MAAMC,aAAaC,KAAI,SAAAC,GAAC,OAAI,cAACR,EAAD,CAASG,QAASK,EAAEL,SAAcK,EAAEC,OAMrF,OACI,sBAAKR,UAAWC,IAAEQ,KAAlB,UACKN,EAED,cAACnB,EAAD,CAAeI,SARR,SAACsB,GACZ,IAAIR,EAAUQ,EAASR,QACvBf,EAAMwB,cAAcT,U,0BCLbU,MApBf,SAAuBzB,GAEnB,IAAM0B,EAAe,SAAC1B,GAClB,OACI,cAAC,IAAD,CAAS2B,GAAI,YAAc3B,EAAMqB,GAAIR,UAAWC,IAAEc,KAAlD,SACI,4BAAI5B,EAAMI,UAKlByB,EAAgB7B,EAAMiB,MAAME,KAAI,SAAAC,GAAC,OACjC,cAACM,EAAD,CAAyBL,GAAID,EAAEC,GAAIjB,KAAMgB,EAAEhB,MAAxBgB,EAAEC,OAEzB,OACI,qBAAKR,UAAWC,IAAEQ,KAAlB,SACKO,K,kBCDEC,EAVD,SAAC9B,GACX,OACI,sBAAKa,UAAWC,IAAEQ,KAAlB,UACI,qBAAKT,UAAWC,IAAEiB,cAAlB,SAAiC,cAAC,EAAD,CAAed,MAAOjB,EAAMiB,MAAMc,kBACnE,qBAAKlB,UAAWC,IAAEkB,KAAlB,SAAwB,cAAC,EAAD,CAAMf,MAAOjB,EAAMiB,MAAOO,cAAexB,EAAMwB,cAAeS,mBAAoBjC,EAAMiC,2B,gECRxHC,EAAY,SAACjB,GACb,MAAO,CACHkB,OAAQlB,EAAMmB,eAAeD,SAiBtBE,EAbQ,SAACC,GAAe,IAC7BC,EAD4B,uKAG1B,OAAKC,KAAKxC,MAAMmC,OACR,cAACG,EAAD,eAAeE,KAAKxC,QADG,cAAC,IAAD,CAAU2B,GAAG,eAHlB,GACFc,IAAMH,WAOtC,OADwBI,kBAAQR,EAAW,GAAnBQ,CAAuBH,I,OCGpCI,sBACXD,mBAdkB,SAACzB,GACnB,MAAO,CACHA,MAAOA,EAAM2B,YAII,SAACC,GACtB,MAAO,CACHrB,cAAe,SAACT,GACZ8B,EAASC,YAAyB/B,SAM1CsB,EAFWM,CAGbb","file":"static/js/5.b3c2f27d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Interlocutors_wrap__AcunL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Dialogs_wrap__34S7v\",\"interlocutors\":\"Dialogs_interlocutors__2JE4S\",\"chat\":\"Dialogs_chat__1V1DM\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/formValidators';\r\nimport { Textarea } from '../../common/Preloader/formsControlls/FormsControlls';\r\nimport s from './Chat.module.css'\r\n\r\nlet maxLength5 = maxLengthCreator(5);\r\nlet ChatForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name='message' component={Textarea} validate={[required, maxLength5]} placeholder='send message to your friend' />\r\n            <br></br>\r\n            <button type='submit'>Send Message </button>\r\n        </form>\r\n    )\r\n}\r\nlet ReduxChatForm = reduxForm({ form: 'reduxChat' })(ChatForm)\r\n\r\nfunction Chat(props) {\r\n    const Message = (props) => {\r\n        return (\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>);\r\n    }\r\n    let messages = props.state.messagesData.map(e => <Message message={e.message} key={e.id} />);\r\n\r\n    let onSubmit = (formData) => {\r\n        let message = formData.message\r\n        props.onSendMessage(message)\r\n    }\r\n    return (\r\n        <div className={s.wrap}>\r\n            {messages}\r\n\r\n            <ReduxChatForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React from 'react';\r\nimport s from './Interlocutors.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Interlocutors(props) {\r\n\r\n    const Conversation = (props) => {\r\n        return (\r\n            <NavLink to={'/dialogs/' + props.id} className={s.item} >\r\n                <p>{props.name}</p>\r\n            </NavLink>\r\n        )\r\n    }\r\n\r\n    let Conversations = props.state.map(e =>\r\n        <Conversation key={e.id} id={e.id} name={e.name} />);\r\n\r\n    return (\r\n        <div className={s.wrap}>\r\n            {Conversations}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Interlocutors;","import React from 'react';\r\nimport Chat from './Chat/Chat';\r\nimport Interlocutors from './Interlocutors/Interlocutors';\r\nimport s from './Dialogs.module.css'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nlet Dialogs = (props) => {\r\n    return (\r\n        <div className={s.wrap}>\r\n            <div className={s.interlocutors}><Interlocutors state={props.state.interlocutors} /></div>\r\n            <div className={s.chat}><Chat state={props.state} onSendMessage={props.onSendMessage} onNewMessageChange={props.onNewMessageChange} /></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import { Redirect } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nlet authProps = (state) => {\r\n    return {\r\n        isAuth: state.authentication.isAuth\r\n    }\r\n}\r\n\r\nlet withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return (<Component {...this.props} />)\r\n        }\r\n    }\r\n    let withAuthContainer = connect(authProps, {})(RedirectComponent)\r\n    return withAuthContainer;\r\n}\r\n\r\n\r\n\r\nexport default withAuthRedirect;","import Dialogs from './Dialogs'\r\nimport { sendMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.dialogs,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessage: (message) => {\r\n            dispatch(sendMessageActionCreator(message))\r\n        },\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}